// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GateServiceMsg.proto

#ifndef PROTOBUF_GateServiceMsg_2eproto__INCLUDED
#define PROTOBUF_GateServiceMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_GateServiceMsg_2eproto();
void protobuf_AssignDesc_GateServiceMsg_2eproto();
void protobuf_ShutdownFile_GateServiceMsg_2eproto();

class PBClientMsg;
class PBServerMsg;

// ===================================================================

class PBClientMsg : public ::google::protobuf::Message {
 public:
  PBClientMsg();
  virtual ~PBClientMsg();

  PBClientMsg(const PBClientMsg& from);

  inline PBClientMsg& operator=(const PBClientMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBClientMsg& default_instance();

  void Swap(PBClientMsg* other);

  // implements Message ----------------------------------------------

  inline PBClientMsg* New() const { return New(NULL); }

  PBClientMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBClientMsg& from);
  void MergeFrom(const PBClientMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBClientMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string accountid = 1;
  void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  const ::std::string& accountid() const;
  void set_accountid(const ::std::string& value);
  void set_accountid(const char* value);
  void set_accountid(const char* value, size_t size);
  ::std::string* mutable_accountid();
  ::std::string* release_accountid();
  void set_allocated_accountid(::std::string* accountid);

  // optional string proxy = 2;
  void clear_proxy();
  static const int kProxyFieldNumber = 2;
  const ::std::string& proxy() const;
  void set_proxy(const ::std::string& value);
  void set_proxy(const char* value);
  void set_proxy(const char* value, size_t size);
  ::std::string* mutable_proxy();
  ::std::string* release_proxy();
  void set_allocated_proxy(::std::string* proxy);

  // @@protoc_insertion_point(class_scope:PBClientMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr accountid_;
  ::google::protobuf::internal::ArenaStringPtr proxy_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_GateServiceMsg_2eproto();
  friend void protobuf_AssignDesc_GateServiceMsg_2eproto();
  friend void protobuf_ShutdownFile_GateServiceMsg_2eproto();

  void InitAsDefaultInstance();
  static PBClientMsg* default_instance_;
};
// -------------------------------------------------------------------

class PBServerMsg : public ::google::protobuf::Message {
 public:
  PBServerMsg();
  virtual ~PBServerMsg();

  PBServerMsg(const PBServerMsg& from);

  inline PBServerMsg& operator=(const PBServerMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBServerMsg& default_instance();

  void Swap(PBServerMsg* other);

  // implements Message ----------------------------------------------

  inline PBServerMsg* New() const { return New(NULL); }

  PBServerMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBServerMsg& from);
  void MergeFrom(const PBServerMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBServerMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string proxy = 2;
  void clear_proxy();
  static const int kProxyFieldNumber = 2;
  const ::std::string& proxy() const;
  void set_proxy(const ::std::string& value);
  void set_proxy(const char* value);
  void set_proxy(const char* value, size_t size);
  ::std::string* mutable_proxy();
  ::std::string* release_proxy();
  void set_allocated_proxy(::std::string* proxy);

  // @@protoc_insertion_point(class_scope:PBServerMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr proxy_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_GateServiceMsg_2eproto();
  friend void protobuf_AssignDesc_GateServiceMsg_2eproto();
  friend void protobuf_ShutdownFile_GateServiceMsg_2eproto();

  void InitAsDefaultInstance();
  static PBServerMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PBClientMsg

// optional string accountid = 1;
inline void PBClientMsg::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBClientMsg::accountid() const {
  // @@protoc_insertion_point(field_get:PBClientMsg.accountid)
  return accountid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBClientMsg::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBClientMsg.accountid)
}
inline void PBClientMsg::set_accountid(const char* value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBClientMsg.accountid)
}
inline void PBClientMsg::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBClientMsg.accountid)
}
inline ::std::string* PBClientMsg::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:PBClientMsg.accountid)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBClientMsg::release_accountid() {
  // @@protoc_insertion_point(field_release:PBClientMsg.accountid)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBClientMsg::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:PBClientMsg.accountid)
}

// optional string proxy = 2;
inline void PBClientMsg::clear_proxy() {
  proxy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBClientMsg::proxy() const {
  // @@protoc_insertion_point(field_get:PBClientMsg.proxy)
  return proxy_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBClientMsg::set_proxy(const ::std::string& value) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBClientMsg.proxy)
}
inline void PBClientMsg::set_proxy(const char* value) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBClientMsg.proxy)
}
inline void PBClientMsg::set_proxy(const char* value, size_t size) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBClientMsg.proxy)
}
inline ::std::string* PBClientMsg::mutable_proxy() {
  
  // @@protoc_insertion_point(field_mutable:PBClientMsg.proxy)
  return proxy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBClientMsg::release_proxy() {
  // @@protoc_insertion_point(field_release:PBClientMsg.proxy)
  
  return proxy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBClientMsg::set_allocated_proxy(::std::string* proxy) {
  if (proxy != NULL) {
    
  } else {
    
  }
  proxy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy);
  // @@protoc_insertion_point(field_set_allocated:PBClientMsg.proxy)
}

// -------------------------------------------------------------------

// PBServerMsg

// optional string key = 1;
inline void PBServerMsg::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBServerMsg::key() const {
  // @@protoc_insertion_point(field_get:PBServerMsg.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBServerMsg::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBServerMsg.key)
}
inline void PBServerMsg::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBServerMsg.key)
}
inline void PBServerMsg::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBServerMsg.key)
}
inline ::std::string* PBServerMsg::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:PBServerMsg.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBServerMsg::release_key() {
  // @@protoc_insertion_point(field_release:PBServerMsg.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBServerMsg::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:PBServerMsg.key)
}

// optional string proxy = 2;
inline void PBServerMsg::clear_proxy() {
  proxy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBServerMsg::proxy() const {
  // @@protoc_insertion_point(field_get:PBServerMsg.proxy)
  return proxy_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBServerMsg::set_proxy(const ::std::string& value) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBServerMsg.proxy)
}
inline void PBServerMsg::set_proxy(const char* value) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBServerMsg.proxy)
}
inline void PBServerMsg::set_proxy(const char* value, size_t size) {
  
  proxy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBServerMsg.proxy)
}
inline ::std::string* PBServerMsg::mutable_proxy() {
  
  // @@protoc_insertion_point(field_mutable:PBServerMsg.proxy)
  return proxy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBServerMsg::release_proxy() {
  // @@protoc_insertion_point(field_release:PBServerMsg.proxy)
  
  return proxy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBServerMsg::set_allocated_proxy(::std::string* proxy) {
  if (proxy != NULL) {
    
  } else {
    
  }
  proxy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy);
  // @@protoc_insertion_point(field_set_allocated:PBServerMsg.proxy)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GateServiceMsg_2eproto__INCLUDED
